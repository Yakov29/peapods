{"mappings":"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","sources":["<anon>","src/js/user.js"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire2ef1\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire2ef1\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $fmRoT = parcelRequire(\"fmRoT\");\n// Функция для получения профиля пользователя\nasync function $7d217b81ff1d49ef$var$fetchProfiles() {\n    const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\n    const usernameFromURL = new URLSearchParams(window.location.search).get(\"username\");\n    if (loggedInUser) {\n        document.getElementById(\"profileName\").textContent = loggedInUser.name;\n        document.getElementById(\"profileNickname\").textContent = `@${loggedInUser.username}`;\n        document.getElementById(\"podsCount\").textContent = `${loggedInUser.podsCount || 0} Pods`;\n        document.getElementById(\"followingCount\").textContent = `${loggedInUser.followingCount || 0} Following`;\n        document.getElementById(\"followersCount\").textContent = `${loggedInUser.followersCount || 0} Followers`;\n    }\n    // Получаем профиль пользователя по имени пользователя из URL\n    if (usernameFromURL) try {\n        const response = await (0, $fmRoT.default).get(\"https://peapods-base.onrender.com/accounts\");\n        const profiles = response.data;\n        const userProfile = profiles.find((profile)=>profile.username === usernameFromURL);\n        if (userProfile) {\n            document.getElementById(\"profileName\").textContent = userProfile.name;\n            document.getElementById(\"profileNickname\").textContent = `@${userProfile.username}`;\n            document.getElementById(\"podsCount\").textContent = `${userProfile.podsCount || 0} Pods`;\n            document.getElementById(\"followingCount\").textContent = `${userProfile.followingCount || 0} Following`;\n            document.getElementById(\"followersCount\").textContent = `${userProfile.followersCount || 0} Followers`;\n            $7d217b81ff1d49ef$var$setupSubscribeButton(loggedInUser, userProfile); // Устанавливаем кнопку подписки\n        }\n    } catch (error) {\n        console.error(\"Error fetching user profile:\", error);\n    }\n}\n// Функция для получения подов конкретного пользователя\nasync function $7d217b81ff1d49ef$var$fetchPods(username) {\n    try {\n        const response = await (0, $fmRoT.default).get(\"https://peapods-base.onrender.com/pods\");\n        const pods = response.data.filter((pod)=>pod.username === username) // Фильтруем поды по имени пользователя\n        .sort((a, b)=>new Date(b.time) - new Date(a.time));\n        const podsContainer = document.getElementById(\"podsContainer\");\n        podsContainer.innerHTML = \"\";\n        const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\n        const currentUserId = loggedInUser.id;\n        pods.forEach((pod)=>{\n            const podItem = document.createElement(\"li\");\n            podItem.classList.add(\"pod\");\n            podItem.innerHTML = `\n                <div class=\"pod__title\">\n                    <img class=\"pod__user__image\" src=\"${pod.userImage || \"./images/Group 5.19.png\"}\" alt=\"User Image\" style=\"cursor: pointer;\" data-username=\"${pod.username}\">\n                    <div class=\"pod__data\">\n                        <p class=\"pod__userdata\" style=\"cursor: pointer;\" data-username=\"${pod.username}\">${pod.username}</p>\n                        <p class=\"pod__time\">${new Date(pod.time).toLocaleString()}</p>\n                    </div>\n                </div>\n                <h2 class=\"pod__text\">${pod.text}</h2>\n                ${pod.image ? `<img class=\"pod__image\" src=\"${pod.image}\" alt=\"Pod Image\">` : \"\"}\n                <ul class=\"comments-list\" id=\"comments-${pod.id}\">\n                    ${pod.comments ? pod.comments.map((comment)=>`\n                        <li class=\"comment-item\">\n                            <p><b>${comment.username}</b>: ${comment.text}</p>\n\n                        </li>\n                    `).join(\"\") : \"\"}\n                </ul>\n            `;\n            // Обработчик клика на аватарку\n            const userImage = podItem.querySelector(\".pod__user__image\");\n            const usernameElement = podItem.querySelector(\".pod__userdata\");\n            userImage.addEventListener(\"click\", ()=>{\n                window.location.href = `/user.html?username=${encodeURIComponent(pod.username)}`; // Перенаправление на страницу профиля\n            });\n            usernameElement.addEventListener(\"click\", ()=>{\n                window.location.href = `/user.html?username=${encodeURIComponent(pod.username)}`; // Перенаправление на страницу профиля\n            });\n            if (pod.userId === currentUserId) {\n                const deleteButton = document.createElement(\"button\");\n                deleteButton.textContent = \"Delete Pod\";\n                deleteButton.classList.add(\"delete-pod-button\");\n                deleteButton.addEventListener(\"click\", ()=>{\n                    deletePod(pod.id);\n                });\n            }\n            podsContainer.appendChild(podItem);\n        });\n        setupCommentListeners();\n    } catch (error) {\n        console.error(\"Error fetching pods:\", error);\n    }\n}\n// Функция для подписки на пользователя\nasync function $7d217b81ff1d49ef$var$subscribeToUser(loggedInUser, userToSubscribe) {\n    try {\n        const updatedUser = {\n            ...loggedInUser,\n            following: [\n                ...loggedInUser.following || [],\n                userToSubscribe.username\n            ]\n        };\n        await (0, $fmRoT.default).put(`https://peapods-base.onrender.com/accounts/${loggedInUser.id}`, updatedUser);\n        localStorage.setItem(\"loggedInUser\", JSON.stringify(updatedUser));\n        alert(`Subscribed to ${userToSubscribe.username} successfully!`);\n    } catch (error) {\n        console.error(\"Error subscribing to user:\", error);\n        alert(\"An error occurred while subscribing.\");\n    }\n}\n// Функция для установки кнопки подписки\nfunction $7d217b81ff1d49ef$var$setupSubscribeButton(loggedInUser, userProfile) {\n    const subscribeButton = document.getElementById(\"subscribeButton\");\n    subscribeButton.addEventListener(\"click\", ()=>{\n        if (loggedInUser.id !== userProfile.id) $7d217b81ff1d49ef$var$subscribeToUser(loggedInUser, userProfile);\n        else alert(\"You cannot subscribe to yourself!\");\n    });\n}\n// Функция для загрузки информации о пользователе при загрузке страницы\ndocument.addEventListener(\"DOMContentLoaded\", async ()=>{\n    await $7d217b81ff1d49ef$var$fetchProfiles();\n    const usernameFromURL = new URLSearchParams(window.location.search).get(\"username\");\n    if (usernameFromURL) await $7d217b81ff1d49ef$var$fetchPods(usernameFromURL); // Передаем имя пользователя в функцию\n});\n\n\n//# sourceMappingURL=user.c60738a1.js.map\n","import axios from \"axios\";\n\n// Функция для получения профиля пользователя\nasync function fetchProfiles() {\n    const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\n    const usernameFromURL = new URLSearchParams(window.location.search).get(\"username\");\n    \n    if (loggedInUser) {\n        document.getElementById(\"profileName\").textContent = loggedInUser.name;\n        document.getElementById(\"profileNickname\").textContent = `@${loggedInUser.username}`;\n        document.getElementById(\"podsCount\").textContent = `${loggedInUser.podsCount || 0} Pods`;\n        document.getElementById(\"followingCount\").textContent = `${loggedInUser.followingCount || 0} Following`;\n        document.getElementById(\"followersCount\").textContent = `${loggedInUser.followersCount || 0} Followers`;\n    }\n    \n    // Получаем профиль пользователя по имени пользователя из URL\n    if (usernameFromURL) {\n        try {\n            const response = await axios.get(\"https://peapods-base.onrender.com/accounts\");\n            const profiles = response.data;\n            const userProfile = profiles.find(profile => profile.username === usernameFromURL);\n            \n            if (userProfile) {\n                document.getElementById(\"profileName\").textContent = userProfile.name;\n                document.getElementById(\"profileNickname\").textContent = `@${userProfile.username}`;\n                document.getElementById(\"podsCount\").textContent = `${userProfile.podsCount || 0} Pods`;\n                document.getElementById(\"followingCount\").textContent = `${userProfile.followingCount || 0} Following`;\n                document.getElementById(\"followersCount\").textContent = `${userProfile.followersCount || 0} Followers`;\n                setupSubscribeButton(loggedInUser, userProfile); // Устанавливаем кнопку подписки\n            }\n        } catch (error) {\n            console.error(\"Error fetching user profile:\", error);\n        }\n    }\n}\n\n// Функция для получения подов конкретного пользователя\nasync function fetchPods(username) {\n    try {\n        const response = await axios.get(\"https://peapods-base.onrender.com/pods\");\n        const pods = response.data\n            .filter(pod => pod.username === username) // Фильтруем поды по имени пользователя\n            .sort((a, b) => new Date(b.time) - new Date(a.time));\n        \n        const podsContainer = document.getElementById(\"podsContainer\");\n        podsContainer.innerHTML = \"\";\n\n        const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\n        const currentUserId = loggedInUser.id;\n\n        pods.forEach(pod => {\n            const podItem = document.createElement(\"li\");\n            podItem.classList.add(\"pod\");\n            podItem.innerHTML = `\n                <div class=\"pod__title\">\n                    <img class=\"pod__user__image\" src=\"${pod.userImage || './images/Group 5.19.png'}\" alt=\"User Image\" style=\"cursor: pointer;\" data-username=\"${pod.username}\">\n                    <div class=\"pod__data\">\n                        <p class=\"pod__userdata\" style=\"cursor: pointer;\" data-username=\"${pod.username}\">${pod.username}</p>\n                        <p class=\"pod__time\">${new Date(pod.time).toLocaleString()}</p>\n                    </div>\n                </div>\n                <h2 class=\"pod__text\">${pod.text}</h2>\n                ${pod.image ? `<img class=\"pod__image\" src=\"${pod.image}\" alt=\"Pod Image\">` : ''}\n                <ul class=\"comments-list\" id=\"comments-${pod.id}\">\n                    ${pod.comments ? pod.comments.map(comment => `\n                        <li class=\"comment-item\">\n                            <p><b>${comment.username}</b>: ${comment.text}</p>\n\n                        </li>\n                    `).join('') : ''}\n                </ul>\n            `;\n\n            // Обработчик клика на аватарку\n            const userImage = podItem.querySelector(\".pod__user__image\");\n            const usernameElement = podItem.querySelector(\".pod__userdata\");\n\n            userImage.addEventListener(\"click\", () => {\n                window.location.href = `/user.html?username=${encodeURIComponent(pod.username)}`; // Перенаправление на страницу профиля\n            });\n\n            usernameElement.addEventListener(\"click\", () => {\n                window.location.href = `/user.html?username=${encodeURIComponent(pod.username)}`; // Перенаправление на страницу профиля\n            });\n\n            if (pod.userId === currentUserId) {\n                const deleteButton = document.createElement(\"button\");\n                deleteButton.textContent = \"Delete Pod\";\n                deleteButton.classList.add(\"delete-pod-button\");\n                deleteButton.addEventListener(\"click\", () => {\n                    deletePod(pod.id);\n                });\n                \n            }\n\n            podsContainer.appendChild(podItem);\n        });\n\n        setupCommentListeners();\n    } catch (error) {\n        console.error(\"Error fetching pods:\", error);\n    }\n}\n\n// Функция для подписки на пользователя\nasync function subscribeToUser(loggedInUser, userToSubscribe) {\n    try {\n        const updatedUser = {\n            ...loggedInUser,\n            following: [...(loggedInUser.following || []), userToSubscribe.username]\n        };\n\n        await axios.put(`https://peapods-base.onrender.com/accounts/${loggedInUser.id}`, updatedUser);\n        localStorage.setItem(\"loggedInUser\", JSON.stringify(updatedUser));\n        alert(`Subscribed to ${userToSubscribe.username} successfully!`);\n    } catch (error) {\n        console.error(\"Error subscribing to user:\", error);\n        alert(\"An error occurred while subscribing.\");\n    }\n}\n\n// Функция для установки кнопки подписки\nfunction setupSubscribeButton(loggedInUser, userProfile) {\n    const subscribeButton = document.getElementById(\"subscribeButton\");\n    \n    subscribeButton.addEventListener(\"click\", () => {\n        if (loggedInUser.id !== userProfile.id) { // Запрет подписки на себя\n            subscribeToUser(loggedInUser, userProfile);\n        } else {\n            alert(\"You cannot subscribe to yourself!\");\n        }\n    });\n}\n\n// Функция для загрузки информации о пользователе при загрузке страницы\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\n    await fetchProfiles();\n    const usernameFromURL = new URLSearchParams(window.location.search).get(\"username\");\n    if (usernameFromURL) {\n        await fetchPods(usernameFromURL); // Передаем имя пользователя в функцию\n    }\n});\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$fmRoT","$7d217b81ff1d49ef$var$fetchProfiles","loggedInUser","JSON","parse","localStorage","getItem","usernameFromURL","URLSearchParams","window","location","search","get","document","getElementById","textContent","name","username","podsCount","followingCount","followersCount","userProfile","profiles","response","default","data","find","profile","subscribeButton","addEventListener","$7d217b81ff1d49ef$var$subscribeToUser","alert","error","console","$7d217b81ff1d49ef$var$fetchPods","pods","filter","pod","sort","a","b","Date","time","podsContainer","innerHTML","currentUserId","forEach","podItem","createElement","classList","add","userImage","toLocaleString","text","image","comments","map","comment","join","querySelector","usernameElement","href","encodeURIComponent","userId","deleteButton","deletePod","appendChild","setupCommentListeners","userToSubscribe","updatedUser","following","put","setItem","stringify"],"version":3,"file":"user.c60738a1.js.map"}