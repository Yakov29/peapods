{"mappings":"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","sources":["<anon>","src/js/user.js"],"sourcesContent":["var $7d217b81ff1d49ef$exports = {};\n// Function to fetch user profile\nasync function $7d217b81ff1d49ef$var$fetchProfiles() {\n    const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\n    const usernameFromURL = new URLSearchParams(window.location.search).get(\"username\");\n    // Clear profile information initially\n    document.getElementById(\"profileName\").textContent = \"\";\n    document.getElementById(\"profileNickname\").textContent = \"\";\n    document.getElementById(\"podsCount\").textContent = \"0 Pods\";\n    document.getElementById(\"followingCount\").textContent = \"0 Following\";\n    document.getElementById(\"followersCount\").textContent = \"0 Followers\";\n    if (loggedInUser) // Only display logged-in user data if no username is in the URL\n    {\n        if (!usernameFromURL) {\n            document.getElementById(\"profileName\").textContent = loggedInUser.name;\n            document.getElementById(\"profileNickname\").textContent = `@${loggedInUser.username}`;\n            document.getElementById(\"podsCount\").textContent = `${loggedInUser.podsCount || 0} Pods`;\n            document.getElementById(\"followingCount\").textContent = `${loggedInUser.followingCount || 0} Following`;\n            document.getElementById(\"followersCount\").textContent = `${loggedInUser.followersCount || 0} Followers`;\n        }\n    }\n    // Fetch user profile by username from URL\n    if (usernameFromURL) try {\n        const response = await fetch(\"https://peapods-base.onrender.com/accounts\");\n        const profiles = await response.json();\n        const userProfile = profiles.find((profile)=>profile.username === usernameFromURL);\n        if (userProfile && loggedInUser.username !== usernameFromURL) {\n            document.getElementById(\"profileName\").textContent = userProfile.name;\n            document.getElementById(\"profileNickname\").textContent = `@${userProfile.username}`;\n            document.getElementById(\"podsCount\").textContent = `${userProfile.podsCount || 0} Pods`;\n            document.getElementById(\"followingCount\").textContent = `${userProfile.followingCount || 0} Following`;\n            document.getElementById(\"followersCount\").textContent = `${userProfile.followersCount || 0} Followers`;\n            $7d217b81ff1d49ef$var$setupSubscribeButton(loggedInUser, userProfile); // Set up the subscribe button\n        } else if (!userProfile) alert(\"Profile not found or an error occurred.\");\n        else if (loggedInUser.username === usernameFromURL) alert(\"You cannot view your own profile this way.\");\n    } catch (error) {\n        console.error(\"Error fetching profiles:\", error);\n    }\n}\n// Function to fetch pods of a specific user\nasync function $7d217b81ff1d49ef$var$fetchPods(username) {\n    try {\n        const response = await fetch(\"https://peapods-base.onrender.com/pods\");\n        const pods = await response.json().filter((pod)=>pod.username === username) // Filter pods by username\n        .sort((a, b)=>new Date(b.time) - new Date(a.time));\n        const podsContainer = document.getElementById(\"podsContainer\");\n        podsContainer.innerHTML = \"\";\n        const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\n        const currentUserId = loggedInUser.id;\n        pods.forEach((pod)=>{\n            const podItem = document.createElement(\"li\");\n            podItem.classList.add(\"pod\");\n            podItem.innerHTML = `\n                <div class=\"pod__title\">\n                    <img class=\"pod__user__image\" src=\"${pod.userImage || \"./images/Group 5.19.png\"}\" alt=\"User Image\" style=\"cursor: pointer;\" data-username=\"${pod.username}\">\n                    <div class=\"pod__data\">\n                        <p class=\"pod__userdata\" style=\"cursor: pointer;\" data-username=\"${pod.username}\">${pod.username}</p>\n                        <p class=\"pod__time\">${new Date(pod.time).toLocaleString()}</p>\n                    </div>\n                </div>\n                <h2 class=\"pod__text\">${pod.text}</h2>\n                ${pod.image ? `<img class=\"pod__image\" src=\"${pod.image}\" alt=\"Pod Image\">` : \"\"}\n                <ul class=\"comments-list\" id=\"comments-${pod.id}\">\n                    ${pod.comments ? pod.comments.map((comment)=>`\n                        <li class=\"comment-item\">\n                            <p><b>${comment.username}</b>: ${comment.text}</p>\n                        </li>\n                    `).join(\"\") : \"\"}\n                </ul>\n            `;\n            // Click handler for the avatar\n            const userImage = podItem.querySelector(\".pod__user__image\");\n            const usernameElement = podItem.querySelector(\".pod__userdata\");\n            userImage.addEventListener(\"click\", ()=>{\n                window.location.href = `/user.html?username=${encodeURIComponent(pod.username)}`; // Redirect to profile page\n            });\n            usernameElement.addEventListener(\"click\", ()=>{\n                window.location.href = `/user.html?username=${encodeURIComponent(pod.username)}`; // Redirect to profile page\n            });\n            if (pod.userId === currentUserId) {\n                const deleteButton = document.createElement(\"button\");\n                deleteButton.textContent = \"Delete Pod\";\n                deleteButton.classList.add(\"delete-pod-button\");\n                deleteButton.addEventListener(\"click\", ()=>{\n                    deletePod(pod.id);\n                });\n                podItem.appendChild(deleteButton); // Add delete button to pod item\n            }\n            podsContainer.appendChild(podItem);\n        });\n    } catch (error) {\n        console.error(\"Error fetching pods:\", error);\n    }\n}\n// Function to subscribe to a user\nasync function $7d217b81ff1d49ef$var$subscribeToUser(loggedInUser, userToSubscribe) {\n    try {\n        const updatedUser = {\n            ...loggedInUser,\n            following: [\n                ...loggedInUser.following || [],\n                userToSubscribe.username\n            ]\n        };\n        const response = await fetch(`https://peapods-base.onrender.com/accounts/${loggedInUser.id}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(updatedUser)\n        });\n        if (!response.ok) throw new Error(\"Failed to subscribe to user\");\n        localStorage.setItem(\"loggedInUser\", JSON.stringify(updatedUser));\n        alert(`Subscribed to ${userToSubscribe.username} successfully!`);\n    } catch (error) {\n        console.error(\"Error subscribing to user:\", error);\n        alert(\"An error occurred while subscribing.\");\n    }\n}\n// Function to set up the subscribe button\nfunction $7d217b81ff1d49ef$var$setupSubscribeButton(loggedInUser, userProfile) {\n    const subscribeButton = document.getElementById(\"subscribeButton\");\n    subscribeButton.addEventListener(\"click\", ()=>{\n        if (loggedInUser.id !== userProfile.id) $7d217b81ff1d49ef$var$subscribeToUser(loggedInUser, userProfile);\n        else alert(\"You cannot subscribe to yourself!\");\n    });\n}\n// Function to load user information when the page loads\ndocument.addEventListener(\"DOMContentLoaded\", async ()=>{\n    await $7d217b81ff1d49ef$var$fetchProfiles();\n    const usernameFromURL = new URLSearchParams(window.location.search).get(\"username\");\n    if (usernameFromURL) await $7d217b81ff1d49ef$var$fetchPods(usernameFromURL); // Pass the username to the function\n});\n\n\n//# sourceMappingURL=user.5caeb5ef.js.map\n","// Function to fetch user profile\nasync function fetchProfiles() {\n    const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\n    const usernameFromURL = new URLSearchParams(window.location.search).get(\"username\");\n    \n    // Clear profile information initially\n    document.getElementById(\"profileName\").textContent = '';\n    document.getElementById(\"profileNickname\").textContent = '';\n    document.getElementById(\"podsCount\").textContent = '0 Pods';\n    document.getElementById(\"followingCount\").textContent = '0 Following';\n    document.getElementById(\"followersCount\").textContent = '0 Followers';\n\n    if (loggedInUser) {\n        // Only display logged-in user data if no username is in the URL\n        if (!usernameFromURL) {\n            document.getElementById(\"profileName\").textContent = loggedInUser.name;\n            document.getElementById(\"profileNickname\").textContent = `@${loggedInUser.username}`;\n            document.getElementById(\"podsCount\").textContent = `${loggedInUser.podsCount || 0} Pods`;\n            document.getElementById(\"followingCount\").textContent = `${loggedInUser.followingCount || 0} Following`;\n            document.getElementById(\"followersCount\").textContent = `${loggedInUser.followersCount || 0} Followers`;\n        }\n    }\n    \n    // Fetch user profile by username from URL\n    if (usernameFromURL) {\n        try {\n            const response = await fetch(\"https://peapods-base.onrender.com/accounts\");\n            const profiles = await response.json();\n            const userProfile = profiles.find(profile => profile.username === usernameFromURL);\n            \n            if (userProfile && loggedInUser.username !== usernameFromURL) {\n                document.getElementById(\"profileName\").textContent = userProfile.name;\n                document.getElementById(\"profileNickname\").textContent = `@${userProfile.username}`;\n                document.getElementById(\"podsCount\").textContent = `${userProfile.podsCount || 0} Pods`;\n                document.getElementById(\"followingCount\").textContent = `${userProfile.followingCount || 0} Following`;\n                document.getElementById(\"followersCount\").textContent = `${userProfile.followersCount || 0} Followers`;\n                setupSubscribeButton(loggedInUser, userProfile); // Set up the subscribe button\n            } else if (!userProfile) {\n                alert(\"Profile not found or an error occurred.\");\n                // Optional: You can redirect to a default profile or reset the profile section.\n            } else if (loggedInUser.username === usernameFromURL) {\n                alert(\"You cannot view your own profile this way.\");\n            }\n        } catch (error) {\n            console.error(\"Error fetching profiles:\", error);\n        }\n    }\n}\n\n// Function to fetch pods of a specific user\nasync function fetchPods(username) {\n    try {\n        const response = await fetch(\"https://peapods-base.onrender.com/pods\");\n        const pods = await response.json()\n            .filter(pod => pod.username === username) // Filter pods by username\n            .sort((a, b) => new Date(b.time) - new Date(a.time));\n        \n        const podsContainer = document.getElementById(\"podsContainer\");\n        podsContainer.innerHTML = \"\";\n\n        const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\n        const currentUserId = loggedInUser.id;\n\n        pods.forEach(pod => {\n            const podItem = document.createElement(\"li\");\n            podItem.classList.add(\"pod\");\n            podItem.innerHTML = `\n                <div class=\"pod__title\">\n                    <img class=\"pod__user__image\" src=\"${pod.userImage || './images/Group 5.19.png'}\" alt=\"User Image\" style=\"cursor: pointer;\" data-username=\"${pod.username}\">\n                    <div class=\"pod__data\">\n                        <p class=\"pod__userdata\" style=\"cursor: pointer;\" data-username=\"${pod.username}\">${pod.username}</p>\n                        <p class=\"pod__time\">${new Date(pod.time).toLocaleString()}</p>\n                    </div>\n                </div>\n                <h2 class=\"pod__text\">${pod.text}</h2>\n                ${pod.image ? `<img class=\"pod__image\" src=\"${pod.image}\" alt=\"Pod Image\">` : ''}\n                <ul class=\"comments-list\" id=\"comments-${pod.id}\">\n                    ${pod.comments ? pod.comments.map(comment => `\n                        <li class=\"comment-item\">\n                            <p><b>${comment.username}</b>: ${comment.text}</p>\n                        </li>\n                    `).join('') : ''}\n                </ul>\n            `;\n\n            // Click handler for the avatar\n            const userImage = podItem.querySelector(\".pod__user__image\");\n            const usernameElement = podItem.querySelector(\".pod__userdata\");\n\n            userImage.addEventListener(\"click\", () => {\n                window.location.href = `/user.html?username=${encodeURIComponent(pod.username)}`; // Redirect to profile page\n            });\n\n            usernameElement.addEventListener(\"click\", () => {\n                window.location.href = `/user.html?username=${encodeURIComponent(pod.username)}`; // Redirect to profile page\n            });\n\n            if (pod.userId === currentUserId) {\n                const deleteButton = document.createElement(\"button\");\n                deleteButton.textContent = \"Delete Pod\";\n                deleteButton.classList.add(\"delete-pod-button\");\n                deleteButton.addEventListener(\"click\", () => {\n                    deletePod(pod.id);\n                });\n                podItem.appendChild(deleteButton); // Add delete button to pod item\n            }\n\n            podsContainer.appendChild(podItem);\n        });\n\n    } catch (error) {\n        console.error(\"Error fetching pods:\", error);\n    }\n}\n\n// Function to subscribe to a user\nasync function subscribeToUser(loggedInUser, userToSubscribe) {\n    try {\n        const updatedUser = {\n            ...loggedInUser,\n            following: [...(loggedInUser.following || []), userToSubscribe.username]\n        };\n\n        const response = await fetch(`https://peapods-base.onrender.com/accounts/${loggedInUser.id}`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(updatedUser)\n        });\n\n        if (!response.ok) {\n            throw new Error(\"Failed to subscribe to user\");\n        }\n\n        localStorage.setItem(\"loggedInUser\", JSON.stringify(updatedUser));\n        alert(`Subscribed to ${userToSubscribe.username} successfully!`);\n    } catch (error) {\n        console.error(\"Error subscribing to user:\", error);\n        alert(\"An error occurred while subscribing.\");\n    }\n}\n\n// Function to set up the subscribe button\nfunction setupSubscribeButton(loggedInUser, userProfile) {\n    const subscribeButton = document.getElementById(\"subscribeButton\");\n    \n    subscribeButton.addEventListener(\"click\", () => {\n        if (loggedInUser.id !== userProfile.id) { // Prevent subscribing to oneself\n            subscribeToUser(loggedInUser, userProfile);\n        } else {\n            alert(\"You cannot subscribe to yourself!\");\n        }\n    });\n}\n\n// Function to load user information when the page loads\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\n    await fetchProfiles();\n    const usernameFromURL = new URLSearchParams(window.location.search).get(\"username\");\n    if (usernameFromURL) {\n        await fetchPods(usernameFromURL); // Pass the username to the function\n    }\n});\n"],"names":["$7d217b81ff1d49ef$var$fetchProfiles","loggedInUser","JSON","parse","localStorage","getItem","usernameFromURL","URLSearchParams","window","location","search","get","document","getElementById","textContent","name","username","podsCount","followingCount","followersCount","response","fetch","userProfile","profiles","json","find","profile","subscribeButton","addEventListener","id","$7d217b81ff1d49ef$var$subscribeToUser","alert","error","console","$7d217b81ff1d49ef$var$fetchPods","pods","filter","pod","sort","a","b","Date","time","podsContainer","innerHTML","currentUserId","forEach","podItem","createElement","classList","add","userImage","toLocaleString","text","image","comments","map","comment","join","querySelector","usernameElement","href","encodeURIComponent","userId","deleteButton","deletePod","appendChild","userToSubscribe","updatedUser","following","method","headers","body","stringify","ok","Error","setItem"],"version":3,"file":"user.5caeb5ef.js.map"}