{"mappings":"ACCA,OAAO,gBAAgB,CAAC,mBAAoB,KACnB,aAAa,OAAO,CAAC,iBAEtC,CAAA,OAAO,QAAQ,CAAC,IAAI,CAAG,WAD3B,CAGJ,GAGA,MAAM,EAAqB,SAAS,aAAa,CAAC,uBAC5C,EAAW,SAAS,aAAa,CAAC,uBAClC,EAAmB,SAAS,aAAa,CAAC,uBAC1C,EAAQ,SAAS,aAAa,CAAC,oBAC/B,EAAgB,SAAS,aAAa,CAAC,oBAG7C,EAAS,gBAAgB,CAAC,QAAS,KAC/B,EAAmB,SAAS,CAAC,GAAG,CAAC,qBACjC,EAAiB,SAAS,CAAC,MAAM,CAAC,oBACtC,GAGA,EAAM,gBAAgB,CAAC,QAAS,KAC5B,EAAmB,SAAS,CAAC,GAAG,CAAC,qBACjC,EAAc,SAAS,CAAC,MAAM,CAAC,oBACnC,GAIA,AADuB,SAAS,aAAa,CAAC,qBAC/B,gBAAgB,CAAC,QAAS,UACrC,IAAM,EAAO,SAAS,aAAa,CAAC,mBAAmB,KAAK,CACtD,EAAW,SAAS,aAAa,CAAC,uBAAuB,KAAK,CAC9D,EAAQ,SAAS,aAAa,CAAC,oBAAoB,KAAK,CACxD,EAAW,SAAS,aAAa,CAAC,uBAAuB,KAAK,CAIpE,GAAI,IAHoB,SAAS,aAAa,CAAC,sBAAsB,KAAK,CAGxC,CAC9B,MAAM,2BACN,MACJ,CAEA,GAAI,CAEA,IAAM,EAAW,MAAM,MAAM,8CAK7B,GADmB,AAHL,CAAA,MAAM,EAAS,IAAI,EAAjC,EAGyB,IAAI,CAAC,AAAA,GAAQ,EAAK,QAAQ,GAAK,GAAY,EAAK,KAAK,GAAK,GACnE,CACZ,MAAM,kDACN,MACJ,CAUA,IAAM,EAAmB,MAAM,MAAM,6CAA8C,CAC/E,OAAQ,OACR,QAAS,CACL,eAAgB,kBACpB,EACA,KAAM,KAAK,SAAS,CAZP,CACb,KAAA,EACA,SAAA,EACA,MAAA,EACA,SAAA,CACJ,EAQA,GAEA,GAAI,EAAiB,EAAE,CAAE,CACrB,IAAM,EAAU,MAAM,EAAiB,IAAI,GAC3C,aAAa,OAAO,CAAC,eAAgB,KAAK,SAAS,CAAC,IACpD,MAAM,mDACN,OAAO,QAAQ,CAAC,IAAI,CAAG,WAC3B,CACJ,CAAE,MAAO,EAAO,CACZ,QAAQ,KAAK,CAAC,6BAA8B,GAC5C,MAAM,2DACV,CACJ,GAIA,AADoB,SAAS,aAAa,CAAC,kBAC/B,gBAAgB,CAAC,QAAS,UAClC,IAAM,EAAQ,SAAS,aAAa,CAAC,iBAAiB,KAAK,CACrD,EAAW,SAAS,aAAa,CAAC,oBAAoB,KAAK,CAEjE,GAAI,CACA,IAAM,EAAW,MAAM,MAAM,8CAIvB,EAAO,AAHC,CAAA,MAAM,EAAS,IAAI,EAAjC,EAGmB,IAAI,CAAC,AAAA,GAAQ,EAAK,KAAK,GAAK,GAAS,EAAK,QAAQ,GAAK,GAEtE,GACA,MAAM,qBACN,aAAa,OAAO,CAAC,eAAgB,KAAK,SAAS,CAAC,IACpD,SAAS,MAAM,IAEf,MAAM,iDAEd,CAAE,MAAO,EAAO,CACZ,QAAQ,KAAK,CAAC,sBAAuB,GACrC,MAAM,oDACV,CACJ","sources":["<anon>","src/js/getstart.js"],"sourcesContent":["var $9c9abcfcf7542550$exports = {};\n// Check if user is already logged in\nwindow.addEventListener(\"DOMContentLoaded\", ()=>{\n    const loggedInUser = localStorage.getItem(\"loggedInUser\");\n    if (loggedInUser) window.location.href = \"home.html\";\n});\n// Elements for the modals\nconst $9c9abcfcf7542550$var$getstartedBackdrop = document.querySelector(\".getstart__backdrop\");\nconst $9c9abcfcf7542550$var$register = document.querySelector(\".getstart__register\");\nconst $9c9abcfcf7542550$var$registerBackdrop = document.querySelector(\".register__backdrop\");\nconst $9c9abcfcf7542550$var$login = document.querySelector(\".getstart__login\");\nconst $9c9abcfcf7542550$var$loginBackdrop = document.querySelector(\".login__backdrop\");\n// Show register modal\n$9c9abcfcf7542550$var$register.addEventListener(\"click\", ()=>{\n    $9c9abcfcf7542550$var$getstartedBackdrop.classList.add(\"change__invisible\");\n    $9c9abcfcf7542550$var$registerBackdrop.classList.remove(\"change__invisible\");\n});\n// Show login modal\n$9c9abcfcf7542550$var$login.addEventListener(\"click\", ()=>{\n    $9c9abcfcf7542550$var$getstartedBackdrop.classList.add(\"change__invisible\");\n    $9c9abcfcf7542550$var$loginBackdrop.classList.remove(\"change__invisible\");\n});\n// Registration form handling\nconst $9c9abcfcf7542550$var$registerButton = document.querySelector(\".register__button\");\n$9c9abcfcf7542550$var$registerButton.addEventListener(\"click\", async ()=>{\n    const name = document.querySelector(\".register__name\").value;\n    const username = document.querySelector(\".register__username\").value;\n    const email = document.querySelector(\".register__email\").value;\n    const password = document.querySelector(\".register__password\").value;\n    const confirmPassword = document.querySelector(\".register__confirm\").value;\n    // Check for password match\n    if (password !== confirmPassword) {\n        alert(\"Passwords do not match!\");\n        return;\n    }\n    try {\n        // Fetch existing users\n        const response = await fetch(\"https://peapods-base.onrender.com/accounts\");\n        const users = await response.json();\n        // Check if username or email already exists\n        const userExists = users.some((user)=>user.username === username || user.email === email);\n        if (userExists) {\n            alert(\"A user with this name or email already exists.\");\n            return;\n        }\n        // Create new user\n        const userData = {\n            name: name,\n            username: username,\n            email: email,\n            password: password\n        };\n        const registerResponse = await fetch(\"https://peapods-base.onrender.com/accounts\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(userData)\n        });\n        if (registerResponse.ok) {\n            const newUser = await registerResponse.json(); // Get the newly created user data\n            localStorage.setItem(\"loggedInUser\", JSON.stringify(newUser)); // Automatically log the user in\n            alert(\"Registration successful! You are now logged in.\");\n            window.location.href = \"home.html\"; // Redirect to home page\n        }\n    } catch (error) {\n        console.error(\"Error during registration:\", error);\n        alert(\"An error occurred during registration. Please try again.\");\n    }\n});\n// Login form handling\nconst $9c9abcfcf7542550$var$loginButton = document.querySelector(\".login__button\");\n$9c9abcfcf7542550$var$loginButton.addEventListener(\"click\", async ()=>{\n    const email = document.querySelector(\".login__email\").value;\n    const password = document.querySelector(\".login__password\").value;\n    try {\n        const response = await fetch(\"https://peapods-base.onrender.com/accounts\");\n        const users = await response.json();\n        // Find user by email and password\n        const user = users.find((user)=>user.email === email && user.password === password);\n        if (user) {\n            alert(\"Login successful!\");\n            localStorage.setItem(\"loggedInUser\", JSON.stringify(user));\n            location.reload(); // Refresh the page after logging in\n        } else alert(\"Incorrect email or password. Please try again.\");\n    } catch (error) {\n        console.error(\"Error during login:\", error);\n        alert(\"An error occurred during login. Please try again.\");\n    }\n});\n\n\n//# sourceMappingURL=index.d15e4a9a.js.map\n","// Check if user is already logged in\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n    const loggedInUser = localStorage.getItem(\"loggedInUser\");\n    if (loggedInUser) {\n        window.location.href = \"home.html\";\n    }\n});\n\n// Elements for the modals\nconst getstartedBackdrop = document.querySelector(\".getstart__backdrop\");\nconst register = document.querySelector(\".getstart__register\");\nconst registerBackdrop = document.querySelector(\".register__backdrop\");\nconst login = document.querySelector(\".getstart__login\");\nconst loginBackdrop = document.querySelector(\".login__backdrop\");\n\n// Show register modal\nregister.addEventListener(\"click\", () => {\n    getstartedBackdrop.classList.add(\"change__invisible\");\n    registerBackdrop.classList.remove(\"change__invisible\");\n});\n\n// Show login modal\nlogin.addEventListener(\"click\", () => {\n    getstartedBackdrop.classList.add(\"change__invisible\");\n    loginBackdrop.classList.remove(\"change__invisible\");\n});\n\n// Registration form handling\nconst registerButton = document.querySelector(\".register__button\");\nregisterButton.addEventListener(\"click\", async () => {\n    const name = document.querySelector(\".register__name\").value;\n    const username = document.querySelector(\".register__username\").value;\n    const email = document.querySelector(\".register__email\").value;\n    const password = document.querySelector(\".register__password\").value;\n    const confirmPassword = document.querySelector(\".register__confirm\").value;\n\n    // Check for password match\n    if (password !== confirmPassword) {\n        alert(\"Passwords do not match!\");\n        return;\n    }\n\n    try {\n        // Fetch existing users\n        const response = await fetch(\"https://peapods-base.onrender.com/accounts\");\n        const users = await response.json();\n\n        // Check if username or email already exists\n        const userExists = users.some(user => user.username === username || user.email === email);\n        if (userExists) {\n            alert(\"A user with this name or email already exists.\");\n            return;\n        }\n\n        // Create new user\n        const userData = {\n            name,\n            username,\n            email,\n            password,\n        };\n\n        const registerResponse = await fetch(\"https://peapods-base.onrender.com/accounts\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(userData),\n        });\n\n        if (registerResponse.ok) {\n            const newUser = await registerResponse.json(); // Get the newly created user data\n            localStorage.setItem(\"loggedInUser\", JSON.stringify(newUser)); // Automatically log the user in\n            alert(\"Registration successful! You are now logged in.\");\n            window.location.href = \"home.html\"; // Redirect to home page\n        }\n    } catch (error) {\n        console.error(\"Error during registration:\", error);\n        alert(\"An error occurred during registration. Please try again.\");\n    }\n});\n\n// Login form handling\nconst loginButton = document.querySelector(\".login__button\");\nloginButton.addEventListener(\"click\", async () => {\n    const email = document.querySelector(\".login__email\").value;\n    const password = document.querySelector(\".login__password\").value;\n\n    try {\n        const response = await fetch(\"https://peapods-base.onrender.com/accounts\");\n        const users = await response.json();\n\n        // Find user by email and password\n        const user = users.find(user => user.email === email && user.password === password);\n\n        if (user) {\n            alert(\"Login successful!\");\n            localStorage.setItem(\"loggedInUser\", JSON.stringify(user));\n            location.reload();  // Refresh the page after logging in\n        } else {\n            alert(\"Incorrect email or password. Please try again.\");\n        }\n    } catch (error) {\n        console.error(\"Error during login:\", error);\n        alert(\"An error occurred during login. Please try again.\");\n    }\n});\n"],"names":["window","addEventListener","localStorage","getItem","location","href","$9c9abcfcf7542550$var$getstartedBackdrop","document","querySelector","$9c9abcfcf7542550$var$register","$9c9abcfcf7542550$var$registerBackdrop","$9c9abcfcf7542550$var$login","$9c9abcfcf7542550$var$loginBackdrop","classList","add","remove","$9c9abcfcf7542550$var$registerButton","name","value","username","email","password","alert","response","fetch","users","json","some","user","registerResponse","method","headers","body","JSON","stringify","ok","newUser","setItem","error","console","$9c9abcfcf7542550$var$loginButton","find","reload"],"version":3,"file":"index.d15e4a9a.js.map"}